/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
       if(head==NULL){
           return NULL;
       }
       ListNode* cur=head;
    //    while(cur!=NULL){
    //        if((cur->next!=NULL) && cur->val==cur->next->val){
    //            ListNode* temp=cur->next;
    //            ListNode* next_next=cur->next->next;
    //            delete(temp);
    //            cur->next=next_next;
    //        }
    //        else{
    //            cur=cur->next;
    //        }
    //    }
    //    return head;
       while((cur!=NULL) && (cur->next!=NULL)){
           if (cur->val == cur->next->val) {
            ListNode* temp = cur->next;
            cur->next = cur->next->next;
            delete temp;
        } 
        else {
            cur = cur->next;
        }
       }
      return head;
    }
};
